What happens when you initialize a repository? Why do you need to do it?

There will be an unseen file. Because then i can make commits

How is the staging area different from the working directory and the repository?
What value do you think it offers?

it is just a temporary saving space where you then commit later the whole wokring directory

How can you use the staging area to make sure you have one commit per logical
change?

I can choose which file i can commit 

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

I can have labels specifieng what the purpose of this code is and bramches help when i have different ideas and want to try out different
verions of code at the same time without reverting to older code

How do the diagrams help you visualize the branch structure?

I can see the whole path and where i when did some other branches and code. It is like a history with different paths.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

It creates one commit with one label and this one commit, is created from two other commits, with hindsight of the oldest parent. It is like that, because this commit has two parents

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

It is an easy way to combine to new features for example, but you dont know exactly what it does withtin the code, when somebody else wrote one code
